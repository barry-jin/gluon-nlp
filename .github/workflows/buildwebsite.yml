name: continuous build - docs

on: [push, pull_request_target]

defaults:
  run:
    shell: bash

jobs:
  website-build:
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
    steps:
      - name: Install Linux dependencies
        run: |
          sudo apt-get install libopenblas-dev pandoc

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Other Dependencies
        run: |
          python -m pip install --quiet --upgrade pip
          python -m pip install --upgrade cython
          python -m pip install --pre "mxnet>=2.0.0b20201206" -f https://dist.mxnet.io/python
          python -m pip install --quiet -e .[extras]

      - name: Compile Notebooks(For push)
        if: ${{ github.event_name == 'push' }}
        run: |
          ./tools/batch/batch_states/compile_notebooks.sh \
                 "push" "${{ github.run_number }}" \
                 "${{ github.repository }}" "${{ github.ref }}"
          exit $?

      - name: Compile Notebooks(For pull request)
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        run: |
          python -m pip install --quiet -e .[extras]
          ./tools/batch/batch_states/compile_notebooks.sh \
                 "#PR-${{ github.event.number }}" "${{ github.run_number }}" \
                 "${{ github.event.pull_request.head.repo.full_name }}" "${{ github.event.pull_request.head.ref }}"
          exit $?

      - name: Build Website (For push)
        if: ${{ (failure() || success()) && github.event_name == 'push' }}
        run: |
          python ./tools/batch/submit-job.py --region us-east-1 \
                                             --job-type g4dn.4x \
                                             --name GluonNLP-Website-${{ github.ref }} \
                                             --source-ref ${{ github.ref }} \
                                             --work-dir . \
                                             --saved-output docs/tutorials \
                                             --save-path tutorials \
                                             --remote https://github.com/${{ github.repository }} \
                                             --command "python -m pip install setuptools ipython sphinx>=1.5.5 \ 
                                                        sphinx-gallery nbsphinx sphinx_rtd_theme mxtheme \
                                                        sphinx-autodoc-typehints matplotlib Image \
                                                        recommonmark nbformat notedown jupyter_client \
                                                        ipykernel ipykernel matplotlib termcolor && \
                                                        ./tools/batch/batch_states/compile_notebooks.sh \
                                                        'master' ${GITHUB_REF##*/}"
                                             --wait | tee build_website.log

      - name: Build Website (For pull request)
        if: ${{ (failure() || success()) && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') }}
        run: |
          python ./tools/batch/submit-job.py --region us-east-1 \
                                             --job-type g4dn.4x \
                                             --name GluonNLP-Website-${{ github.ref }} \
                                             --source-ref ${{ github.ref }} \
                                             --work-dir . \
                                             --saved-output docs/tutorials \
                                             --save-path tutorials \
                                             --remote https://github.com/${{ github.repository }} \
                                             --command "python -m pip install setuptools ipython sphinx>=1.5.5 \ 
                                                        sphinx-gallery nbsphinx sphinx_rtd_theme mxtheme \
                                                        sphinx-autodoc-typehints matplotlib Image \
                                                        recommonmark nbformat notedown jupyter_client \
                                                        ipykernel ipykernel matplotlib termcolor && \
                                                        ./tools/batch/batch_states/compile_notebooks.sh \
                                                        'master' ${GITHUB_REF##*/}"
                                             --wait | tee build_website.log

      - name: Wait for job and copy logs from AWS s3
        if: ${{ failure() || success() }}
        run: |
          head -100 batch_job.log | grep -oP -m 1 'jobId: \K(.*)' > jobid.log
          
          echo "Job ID is"
          cat jobid.log

          cat jobid.log | xargs -i python ./tools/batch/wait-job.py --job-id {}

          echo "Copy Log file"
          cat jobid.log | xargs -i aws s3api wait object-exists --bucket gluon-nlp-dev --key batch/{}/tutorials
          cat jobid.log | xargs -i aws s3 cp s3://gluon-nlp-dev/batch/{}/tutorials/*/*.stdout.log .         

      - name: Upload Artifacts 
        if: ${{ failure() || success() }}
        uses: actions/upload-artifact@v2
        with:
          name: Notebook_Logs
          path: ./*.stdout.log

      - name: Create comment
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        uses: peter-evans/create-or-update-comment@v1
        with: 
          issue-number: ${{ github.event.number }}
          body: |
            The documentation website for preview: http://gluon-nlp-staging.s3-accelerate.dualstack.amazonaws.com/PR${{ github.event.number }}/${{ github.event.pull_request.head.ref }}/index.html
