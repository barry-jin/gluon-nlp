name: continuous build

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  unittest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # TODO Add windows test by using "windows-latest"
        os: [ubuntu-latest, macos-latest]
        python-version: [ '3.6', '3.7', '3.8']
        exclude:
          - os: macos-latest
            python-version: 3.6
          - os: macos-latest
            python-version: 3.8
          - os: ubuntu-latest
            python-version: 3.7
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Compilation cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          # Restore any ccache cache entry, if none for
          # ${{ runner.os }}-ccache-${{ github.sha }} exists
          restore-keys: |
            ${{ runner.os }}-ccache
      # Install Linux specific dependencies
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        # TODO https://github.com/apache/incubator-mxnet/issues/18293
        run: |
          sudo apt-get install -y libopenblas-dev ninja-build libedit-dev libxml2-dev
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install Other Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools pytest pytest-cov contextvars
          python -m pip install --pre "mxnet>=1.9.0b20210220" -f https://dist.mxnet.io/python
          python -m pip install -U -e .[extras,dev]
          python -m pip install -v -e .
          python -m pip install horovod --no-cache-dir -U
          python -m spacy download en
          python -m spacy download de
          python -m nltk.downloader all

      - name: Run Unittests
        run: |
          pytest -n 4 -m 'not (gpu or serial)' --durations=30 --cov=./ --cov-report=xml tests/unittest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.10
        with:
          env_vars: OS,PYTHON
